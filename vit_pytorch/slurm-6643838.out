usage: resnet_training_loop.py [-h] [--logger LOGGER]
                               [--checkpoint_callback CHECKPOINT_CALLBACK]
                               [--early_stop_callback EARLY_STOP_CALLBACK]
                               [--default_root_dir DEFAULT_ROOT_DIR]
                               [--gradient_clip_val GRADIENT_CLIP_VAL]
                               [--process_position PROCESS_POSITION]
                               [--num_nodes NUM_NODES]
                               [--num_processes NUM_PROCESSES] [--gpus GPUS]
                               [--auto_select_gpus AUTO_SELECT_GPUS]
                               [--num_tpu_cores NUM_TPU_CORES]
                               [--log_gpu_memory LOG_GPU_MEMORY]
                               [--progress_bar_refresh_rate PROGRESS_BAR_REFRESH_RATE]
                               [--overfit_pct OVERFIT_PCT]
                               [--track_grad_norm TRACK_GRAD_NORM]
                               [--check_val_every_n_epoch CHECK_VAL_EVERY_N_EPOCH]
                               [--fast_dev_run FAST_DEV_RUN]
                               [--accumulate_grad_batches ACCUMULATE_GRAD_BATCHES]
                               [--max_epochs MAX_EPOCHS]
                               [--min_epochs MIN_EPOCHS]
                               [--max_steps MAX_STEPS] [--min_steps MIN_STEPS]
                               [--train_percent_check TRAIN_PERCENT_CHECK]
                               [--val_percent_check VAL_PERCENT_CHECK]
                               [--test_percent_check TEST_PERCENT_CHECK]
                               [--val_check_interval VAL_CHECK_INTERVAL]
                               [--log_save_interval LOG_SAVE_INTERVAL]
                               [--row_log_interval ROW_LOG_INTERVAL]
                               [--distributed_backend DISTRIBUTED_BACKEND]
                               [--precision PRECISION]
                               [--print_nan_grads PRINT_NAN_GRADS]
                               [--weights_summary WEIGHTS_SUMMARY]
                               [--weights_save_path WEIGHTS_SAVE_PATH]
                               [--num_sanity_val_steps NUM_SANITY_VAL_STEPS]
                               [--truncated_bptt_steps TRUNCATED_BPTT_STEPS]
                               [--resume_from_checkpoint RESUME_FROM_CHECKPOINT]
                               [--benchmark BENCHMARK]
                               [--reload_dataloaders_every_epoch RELOAD_DATALOADERS_EVERY_EPOCH]
                               [--auto_lr_find AUTO_LR_FIND]
                               [--replace_sampler_ddp REPLACE_SAMPLER_DDP]
                               [--progress_bar_callback PROGRESS_BAR_CALLBACK]
                               [--amp_level AMP_LEVEL]
                               [--terminate_on_nan TERMINATE_ON_NAN]
                               [--channels CHANNELS]
                               [--num_classes NUM_CLASSES]
                               [--batch_size BATCH_SIZE]
                               [--learning_rate LEARNING_RATE]
                               [--weight_decay WEIGHT_DECAY] [--seed SEED]
                               [--dataset DATASET]
                               [--architecture ARCHITECTURE]
resnet_training_loop.py: error: argument --dataset: expected one argument
/opt/slurm/data/slurmd/job6643838/slurm_script: line 13: cifar100: command not found
